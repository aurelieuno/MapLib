{"version":3,"sources":["../src/Drawer.test.js"],"names":["describe","it","shallow","expander","find","expect","prop","to","contain","drawer","mount","closer","simulate","not","update","testClassName","input","exists","equal"],"mappings":";;AAAA;;;;;;AAEAA,SAAS,QAAT,EAAmB,YAAM;AACvBC,KAAG,eAAH,EAAoB,YAAM;AACxBC,YAAQ,2CAAR;AACD,GAFD;;AAIAD,KAAG,0BAAH,EAA+B,YAAM;AACnC,QAAME,WAAWD,QAAQ,wCAAQ,UAAR,GAAR,EAAyBE,IAAzB,kBAAjB;;AAEAC,WAAOF,SAASG,IAAT,CAAc,WAAd,CAAP,EAAmCC,EAAnC,CAAsCC,OAAtC,CAA8C,kBAA9C;AACD,GAJD;;AAMAP,KAAG,yBAAH,EAA8B,YAAM;AAClC,QAAMQ,SAASC,MAAM,wCAAQ,UAAR,GAAN,CAAf;AACA,QAAMP,WAAWM,OAAOL,IAAP,kBAAjB;AACA,QAAMO,SAASR,SAASC,IAAT,CAAc,oBAAd,CAAf;AACAO,WAAOC,QAAP,CAAgB,OAAhB;;AAEAP,WAAOF,SAASC,IAAT,CAAc,aAAd,EAA6BE,IAA7B,CAAkC,WAAlC,CAAP,EAAuDC,EAAvD,CAA0DM,GAA1D,CAA8DL,OAA9D,CAAsE,kBAAtE;;AAEAL,aAASC,IAAT,CAAc,sBAAd,EAAsCQ,QAAtC,CAA+C,OAA/C;AACAH,WAAOK,MAAP;;AAEAT,WAAOI,OAAOL,IAAP,CAAY,aAAZ,EAA2BE,IAA3B,CAAgC,WAAhC,CAAP,EAAqDC,EAArD,CAAwDC,OAAxD,CAAgE,kBAAhE;AACD,GAZD;;AAcAP,KAAG,+BAAH,EAAoC,YAAM;AACxC,QAAMc,gBAAgB,UAAtB;;AAEA,QAAMC,QAAQd,QAAQ,wCAAQ,WAAWa,aAAnB,GAAR,EAA8CX,IAA9C,OAAuDW,aAAvD,CAAd;;AAEAV,WAAOW,MAAMC,MAAN,EAAP,EAAuBV,EAAvB,CAA0BW,KAA1B,CAAgC,IAAhC;AACD,GAND;AAOD,CAhCD","file":"Drawer.test.js","sourcesContent":["import Drawer, { Expander } from './Drawer'\n\ndescribe('Drawer', () => {\n  it('should render', () => {\n    shallow(<Drawer />)\n  })\n\n  it('can handle boolean props', () => {\n    const expander = shallow(<Drawer left />).find(Expander)\n\n    expect(expander.prop('className')).to.contain('rev-Drawer--left')\n  })\n\n  it('can expand and collapse', () => {\n    const drawer = mount(<Drawer left />)\n    const expander = drawer.find(Expander)\n    const closer = expander.find('.rev-Drawer-closer')\n    closer.simulate('click')\n\n    expect(expander.find('.rev-Drawer').prop('className')).to.not.contain('rev-Drawer--open')\n\n    expander.find('.rev-Drawer-expander').simulate('click')\n    drawer.update()\n\n    expect(drawer.find('.rev-Drawer').prop('className')).to.contain('rev-Drawer--open')\n  })\n\n  it('should add className to child', () => {\n    const testClassName = '__TEST__'\n\n    const input = shallow(<Drawer className={testClassName} />).find(`.${testClassName}`)\n\n    expect(input.exists()).to.equal(true)\n  })\n})\n"]}