{"version":3,"sources":["../src/Tabs.js"],"names":["TabsTitle","props","onClick","href","title","active","className","TabsPanel","children","renderHiddenTabs","display","TabsItem","renderTitle","Tabs","activeKey","rewriteItem","child","contentKey","rewriteItemToTitle","item","items","map","titles","divClassName","StatefulTabs","setActive","setState","rewriteChild","newOnClick","e","args","preventDefault","state","defaultActive","toArray","Stateful","Item"],"mappings":"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","file":"Tabs.js","sourcesContent":["import React, {Children, cloneElement, Component} from 'react'\nimport classNames from 'classnames'\n\nclass TabsTitle extends Component {\n  render() {\n    const {onClick, href, title, active} = this.props\n    const className = classNames('rev-TabsTitle', {\n      'rev-TabsTitle--selected': active,\n    })\n    return (\n      <li className={className}>\n        <a className=\"rev-TabsTitle-link\" href={href || '#'} onClick={onClick} aria-selected={active}>\n          {title}\n        </a>\n      </li>\n    )\n  }\n}\n\nclass TabsPanel extends Component {\n  render() {\n    const {children, active, renderHiddenTabs} = this.props\n\n    const className = classNames(\n      'rev-TabsItem-panel--selected',\n      'rev-TabsItem-panel',\n    )\n    if (renderHiddenTabs) {\n      if (!active)\n        return <div style={{display: \"none\"}} className={className}>\n          {children}\n        </div>\n    } else {\n      if (!active)\n        return null\n    }\n\n    return (\n      <div style={{display: \"block\"}} className={className}>\n        {children}\n      </div>\n    )\n  }\n}\n\nclass TabsItem extends Component {\n  render() {\n    const {renderTitle, ...props} = this.props\n    return renderTitle ? <TabsTitle {...props} /> : <TabsPanel {...props} />\n  }\n}\n\nexport default class Tabs extends Component {\n  render() {\n    const {children, className, active, renderHiddenTabs} = this.props\n\n    let activeKey = active\n    const rewriteItem = (child) => {\n      activeKey = activeKey || child.props.contentKey // default to first child\n      const {contentKey} = child.props\n      return cloneElement(child, {active: activeKey === contentKey, renderHiddenTabs})\n    }\n\n    const rewriteItemToTitle = (item) => {\n      return cloneElement(item, {renderTitle: true})\n    }\n\n    const items = Children.map(children, rewriteItem)\n    const titles = items.map(rewriteItemToTitle)\n\n    const divClassName = classNames(className, 'rev-Tabs')\n\n    return (\n      <div className={divClassName}>\n        <ul className=\"rev-Tabs-titles\">\n          {titles}\n        </ul>\n        <div className=\"rev-Tabs-content\">\n          {items}\n        </div>\n      </div>\n    )\n  }\n}\n\nclass StatefulTabs extends Component {\n\n  constructor(props) {\n    super(props)\n    this.state = {\n      active: props.defaultActive || Children.toArray(props.children)[0].props.contentKey,\n    }\n  }\n\n  setActive = (contentKey) => {\n    this.setState({active: contentKey})\n  };\n\n  rewriteChild = (child) => {\n    const {contentKey, onClick} = child.props\n    const newOnClick = (e, ...args) => {\n      e.preventDefault()\n      this.setActive(contentKey)\n      if (onClick) {\n        return onClick(e, ...args)\n      }\n    }\n    return cloneElement(child, {onClick: newOnClick})\n  };\n\n  render() {\n    const {active} = this.state\n    const {children, ...props} = this.props\n    return (\n      <Tabs {...props} active={this.state.active}>\n        {Children.map(children, this.rewriteChild)}\n      </Tabs>\n    )\n  }\n}\n\nTabs.Stateful = StatefulTabs\nTabs.Item = TabsItem\n"]}