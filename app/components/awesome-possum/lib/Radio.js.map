{"version":3,"sources":["../src/Radio.js"],"names":["Radio","props","error","className","label","children","labelClassName","inputClassName","RadioFieldset","options","name","value","defaultValue","help","onChange","readOnly","rest","isControlled","hasDefault","radios","map","option","key","disabled","checked","defaultChecked","fieldsetClassName","Fieldset"],"mappings":";;;;;;;;;;AAAA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;;;;;;;;;;;IAEqBA,K;;;;;;;;;;;6BAEV;AAAA,mBAC+C,KAAKC,KADpD;AAAA,UACAC,KADA,UACAA,KADA;AAAA,UACOC,SADP,UACOA,SADP;AAAA,UACkBC,KADlB,UACkBA,KADlB;AAAA,UACyBC,QADzB,UACyBA,QADzB;AAAA,UACsCJ,KADtC;;AAGP,UAAMK,iBAAiB,0BAAWH,SAAX,EAAsB,WAAtB,EAAmC;AACxD,sBAAc,CAAC,CAACD;AADwC,OAAnC,CAAvB;;AAIA,UAAMK,iBAAiB,0BAAW,iBAAX,EAA8B;AACnD,4BAAoB,CAAC,CAACL,KAD6B;AAEnD,sBAAc,CAAC,CAACA;AAFmC,OAA9B,CAAvB;;AAKA,aACE;AAAA;AAAA,UAAY,WAAWI,cAAvB,EAAuC,OAAOJ,KAA9C;AACE,4DAAWD,KAAX,IAAkB,WAAWM,cAA7B,EAA6C,MAAK,OAAlD,IADF;AAEE;AAAA;AAAA,YAAM,WAAU,iBAAhB;AAAmCH;AAAnC;AAFF,OADF;AAMD;;;;;;kBApBkBJ,K;;IAuBfQ,a;;;;;;;;;;;6BACK;AAAA,oBAaH,KAAKP,KAbF;AAAA,UAELE,SAFK,WAELA,SAFK;AAAA,UAGLM,OAHK,WAGLA,OAHK;AAAA,UAILC,IAJK,WAILA,IAJK;AAAA,UAKLC,KALK,WAKLA,KALK;AAAA,UAMLC,YANK,WAMLA,YANK;AAAA,UAOLR,KAPK,WAOLA,KAPK;AAAA,UAQLS,IARK,WAQLA,IARK;AAAA,UASLX,KATK,WASLA,KATK;AAAA,UAULY,QAVK,WAULA,QAVK;AAAA,UAWLC,QAXK,WAWLA,QAXK;AAAA,UAYFC,IAZE;;AAeP,UAAMC,eAAeN,SAAS,IAA9B;AACA,UAAMO,aAAaN,gBAAgB,IAAnC;;AAEA,UAAMO,SAASV,QAAQW,GAAR,CAAY,UAACC,MAAD,EAAY;AACrC,YAAMpB,QAAQ;AACZS,oBADY;AAEZR,sBAFY;AAGZY,4BAHY;AAIZC,4BAJY;AAKZX,iBAAOiB,OAAOjB,KALF;AAMZkB,eAAKD,OAAOC,GAAP,IAAcD,OAAOV,KANd;AAOZY,oBAAUF,OAAOE;AAPL,SAAd;;AAUAtB,cAAMU,KAAN,GAAcU,OAAOV,KAArB;;AAEA,YAAGM,YAAH,EAAiB;AACfhB,gBAAMuB,OAAN,GAAgBb,SAASU,OAAOV,KAAhC;AACD;AACD,YAAGO,UAAH,EAAe;AACbjB,gBAAMwB,cAAN,GAAuBb,gBAAgBS,OAAOV,KAA9C;AACD;;AAED,eAAO,8BAAC,KAAD,eAAWV,KAAX,IAAkB,WAAU,yBAA5B,IAAP;AACD,OArBc,CAAf;;AAuBA,UAAMyB,oBAAoB,0BAAWvB,SAAX,EAAsB,mBAAtB,CAA1B;;AAEA,aACE;AAAA;AAAA,qBACMa,IADN;AAEE,qBAAWU,iBAFb;AAGE,gBAAMb,IAHR;AAIE,iBAAOX,KAJT;AAKE,iBAAOE;AALT;AAOGe;AAPH,OADF;AAWD;;;;;;AAGHnB,MAAM2B,QAAN,GAAiBnB,aAAjB","file":"Radio.js","sourcesContent":["import React, {Component} from 'react'\nimport PropTypes from 'prop-types'\nimport classNames from 'classnames'\nimport InputLabel from './InputLabel'\nimport InputHelpText from './InputHelpText'\nimport InputErrors from './InputErrors'\nimport CheckableFieldset from './CheckableFieldset'\n\nexport default class Radio extends Component {\n\n  render() {\n    const {error, className, label, children, ...props} = this.props\n\n    const labelClassName = classNames(className, 'rev-Radio', {\n      'is-invalid': !!error,\n    })\n\n    const inputClassName = classNames('rev-Radio-input', {\n      'is-invalid-input': !!error,\n      'is-invalid': !!error,\n    })\n\n    return (\n      <InputLabel className={labelClassName} error={error}>\n        <input {...props} className={inputClassName} type=\"radio\" />\n        <span className=\"rev-Radio-label\">{label}</span>\n      </InputLabel>\n    )\n  }\n}\n\nclass RadioFieldset extends Component {\n  render() {\n    const {\n      className,\n      options,\n      name,\n      value,\n      defaultValue,\n      label,\n      help,\n      error,\n      onChange,\n      readOnly,\n      ...rest,\n    } = this.props\n\n    const isControlled = value != null\n    const hasDefault = defaultValue != null\n\n    const radios = options.map((option) => {\n      const props = {\n        name,\n        error,\n        onChange,\n        readOnly,\n        label: option.label,\n        key: option.key || option.value,\n        disabled: option.disabled,\n      }\n\n      props.value = option.value\n\n      if(isControlled) {\n        props.checked = value == option.value\n      }\n      if(hasDefault) {\n        props.defaultChecked = defaultValue == option.value\n      }\n\n      return <Radio {...props} className=\"rev-RadioFieldset-radio\" />\n    })\n\n    const fieldsetClassName = classNames(className, 'rev-RadioFieldset')\n\n    return (\n      <CheckableFieldset\n        {...rest}\n        className={fieldsetClassName}\n        help={help}\n        error={error}\n        label={label}\n      >\n        {radios}\n      </CheckableFieldset>\n    )\n  }\n}\n\nRadio.Fieldset = RadioFieldset\n"]}