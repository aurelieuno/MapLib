{"version":3,"sources":["../../src/DatePicker/Calendar.test.js"],"names":["describe","it","shallow","calendar","monthString","local","toLocaleString","month","year","expect","find","text","to","contain","simulate","preventDefault","minus","fromObject","startOf","plus"],"mappings":";;AAAA;;;;AACA;;AACA;;;;;;AAEAA,SAAS,UAAT,EAAqB,YAAM;AACzBC,KAAG,gCAAH,EAAqC,YAAM;AACzCC,YAAQ,6CAAR;AACD,GAFD;;AAIAD,KAAG,mBAAH,EAAwB,YAAM;AAC5B,QAAME,WAAWD,QAAQ,6CAAR,CAAjB;AACA,QAAME,cAAc,gBAASC,KAAT,GAAiBC,cAAjB,CAAgC;AAClDC,aAAO,OAD2C;AAElDC,YAAM;AAF4C,KAAhC,CAApB;;AAKAC,WAAON,SAASO,IAAT,CAAc,4BAAd,EAA4CC,IAA5C,EAAP,EAA2DC,EAA3D,CAA8DC,OAA9D,CAAsET,WAAtE;AACD,GARD;;AAUAH,KAAG,+BAAH,EAAoC,YAAM;AACxC,QAAME,WAAWD,QAAQ,0CAAU,cAAa,QAAvB,GAAR,CAAjB;AACA,QAAME,cAAc,gBAASC,KAAT,GAAiBC,cAAjB,CAAgC;AAClDC,aAAO,OAD2C;AAElDC,YAAM;AAF4C,KAAhC,CAApB;;AAKAC,WAAON,SAASO,IAAT,CAAc,4BAAd,EAA4CC,IAA5C,EAAP,EAA2DC,EAA3D,CAA8DC,OAA9D,CAAsET,WAAtE;AACD,GARD;;AAUAH,KAAG,8BAAH,EAAmC,YAAM;AACvC,QAAME,WAAWD,QAAQ,6CAAR,CAAjB;AACAC,aACGO,IADH,CACQ,uCADR,EAEGI,QAFH,CAEY,OAFZ,EAEqB,EAAEC,gBAAgB;AAAA,eAAM,IAAN;AAAA,OAAlB,EAFrB;AAGA,QAAMX,cAAc,gBAASC,KAAT,GACjBW,KADiB,CACX,gBAASC,UAAT,CAAoB,EAAEV,OAAO,CAAT,EAApB,CADW,EAEjBD,cAFiB,CAEF,EAAEC,OAAO,OAAT,EAAkBC,MAAM,SAAxB,EAFE,CAApB;;AAIAC,WAAON,SAASO,IAAT,CAAc,4BAAd,EAA4CC,IAA5C,EAAP,EAA2DC,EAA3D,CAA8DC,OAA9D,CAAsET,WAAtE;AACD,GAVD;;AAYAH,KAAG,6BAAH,EAAkC,YAAM;AACtC,QAAME,WAAWD,QAAQ,6CAAR,CAAjB;AACAC,aACGO,IADH,CACQ,mCADR,EAEGI,QAFH,CAEY,OAFZ,EAEqB,EAAEC,gBAAgB;AAAA,eAAM,IAAN;AAAA,OAAlB,EAFrB;AAGA,QAAMX,cAAc,gBACjBC,KADiB,GAEjBa,OAFiB,CAET,OAFS,EAGjBC,IAHiB,CAGZ,gBAASF,UAAT,CAAoB,EAAEV,OAAO,CAAT,EAApB,CAHY,EAIjBD,cAJiB,CAIF,EAAEC,OAAO,OAAT,EAAkBC,MAAM,SAAxB,EAJE,CAApB;;AAMAC,WAAON,SAASO,IAAT,CAAc,4BAAd,EAA4CC,IAA5C,EAAP,EAA2DC,EAA3D,CAA8DC,OAA9D,CAAsET,WAAtE;AACD,GAZD;AAaD,CAlDD","file":"Calendar.test.js","sourcesContent":["import Calendar from './Calendar'\nimport { DateTime, Duration } from 'luxon'\nimport sinon from 'sinon'\n\ndescribe('Calendar', () => {\n  it('should render without throwing', () => {\n    shallow(<Calendar />)\n  })\n\n  it('defaults to today', () => {\n    const calendar = shallow(<Calendar />)\n    const monthString = DateTime.local().toLocaleString({\n      month: 'short',\n      year: 'numeric'\n    })\n\n    expect(calendar.find('.rev-Calendar-header-label').text()).to.contain(monthString)\n  })\n\n  it('treats invalid dates as today', () => {\n    const calendar = shallow(<Calendar selectedDate=\"-05-17\" />)\n    const monthString = DateTime.local().toLocaleString({\n      month: 'short',\n      year: 'numeric'\n    })\n\n    expect(calendar.find('.rev-Calendar-header-label').text()).to.contain(monthString)\n  })\n\n  it('can advance a month backward', () => {\n    const calendar = shallow(<Calendar />)\n    calendar\n      .find('.rev-Calendar-header-button--previous')\n      .simulate('click', { preventDefault: () => null })\n    const monthString = DateTime.local()\n      .minus(Duration.fromObject({ month: 1 }))\n      .toLocaleString({ month: 'short', year: 'numeric' })\n\n    expect(calendar.find('.rev-Calendar-header-label').text()).to.contain(monthString)\n  })\n\n  it('can advance a month forward', () => {\n    const calendar = shallow(<Calendar />)\n    calendar\n      .find('.rev-Calendar-header-button--next')\n      .simulate('click', { preventDefault: () => null })\n    const monthString = DateTime\n      .local()\n      .startOf('month')\n      .plus(Duration.fromObject({ month: 1 }))\n      .toLocaleString({ month: 'short', year: 'numeric' })\n\n    expect(calendar.find('.rev-Calendar-header-label').text()).to.contain(monthString)\n  })\n})\n"]}