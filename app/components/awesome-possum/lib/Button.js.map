{"version":3,"sources":["../src/Button.js"],"names":["BOOL_PROPS_TO_CLASS_NAMES","small","large","primary","secondary","inverted","success","warning","alert","disabled","expanded","dropdown","BOOL_PROPS","Object","keys","Button","props","className","children","tag","icon","boolClassNames","forEach","name","push","href","buttonClassName","component","newChildren","toArray"],"mappings":";;;;;;;;;;AAAA;;;;AACA;;;;AACA;;;;;;;;;;;;;;;;AAEA,IAAMA,4BAA4B;AAChCC,SAAO,CAAC,mBAAD,CADyB;AAEhCC,SAAO,CAAC,mBAAD,CAFyB;;AAIhCC,WAAS,CAAC,qBAAD,CAJuB;AAKhCC,aAAW,CAAC,uBAAD,CALqB;AAMhCC,YAAU,CAAC,sBAAD,CANsB;;AAQhCC,WAAS,CAAC,qBAAD,CARuB;AAShCC,WAAS,CAAC,qBAAD,CATuB;AAUhCC,SAAO,CAAC,mBAAD,CAVyB;AAWhCC,YAAU,CAAC,sBAAD,CAXsB;;AAahCC,YAAU,CAAC,sBAAD,CAbsB;;AAehCC,YAAU,CAAC,sBAAD;AAfsB,CAAlC;AAiBA,IAAMC,aAAaC,OAAOC,IAAP,CAAYd,yBAAZ,CAAnB;;IAEqBe,M;;;;;;;;;;;6BACV;AACP;AADO,mBAE4C,KAAKC,KAFjD;AAAA,UAEAC,SAFA,UAEAA,SAFA;AAAA,UAEWC,QAFX,UAEWA,QAFX;AAAA,UAEqBC,GAFrB,UAEqBA,GAFrB;AAAA,UAE0BC,IAF1B,UAE0BA,IAF1B;AAAA,UAEmCJ,KAFnC;;AAIP;;;AACA,UAAMK,iBAAiB,EAAvB;AACAT,iBAAWU,OAAX,CAAmB,UAACC,IAAD,EAAU;AAC3B,YAAGP,MAAMO,IAAN,CAAH,EAAgB;AACdF,yBAAeG,IAAf,CAAoBxB,0BAA0BuB,IAA1B,CAApB;AACD;AACD,eAAOP,MAAMO,IAAN,CAAP;AACD,OALD;;AAOA;AAbO,UAcAd,QAdA,GAckBO,KAdlB,CAcAP,QAdA;AAAA,UAcUgB,IAdV,GAckBT,KAdlB,CAcUS,IAdV;;AAgBP;;AACA,UAAMC,kBAAkB,0BAAWT,SAAX,EAAsB,YAAtB,EAAoCI,cAApC,EAAoD;AAC1EZ;AAD0E,OAApD,CAAxB;;AAIA;AACA,UAAMkB,YAAYR,QAAQM,OAAO,GAAP,GAAa,QAArB,CAAlB;;AAEA;AACA,UAAIG,cAAcV,QAAlB;AACA,UAAGE,IAAH,EAAS;AACPQ,uBACE,gDAAM,WAAU,iBAAhB,EAAkC,KAAI,MAAtC,EAA6C,GAAGR,IAAhD,GADF,EAEE,GAFF,4BAGK,gBAASS,OAAT,CAAiBX,QAAjB,CAHL;AAKD;;AAED;AACA,aAAO,0BACLS,SADK,eAEDX,KAFC,IAEMC,WAAWS,eAFjB,KAGLE,WAHK,CAAP;AAKD;;;;;;kBAzCkBb,M","file":"Button.js","sourcesContent":["import React, {Component, Children, createElement} from 'react'\nimport classNames from 'classnames'\nimport Icon from './Icon'\n\nconst BOOL_PROPS_TO_CLASS_NAMES = {\n  small: ['rev-Button--small'],\n  large: ['rev-Button--large'],\n\n  primary: ['rev-Button--primary'],\n  secondary: ['rev-Button--secondary'],\n  inverted: ['rev-Button--inverted'],\n\n  success: ['rev-Button--success'],\n  warning: ['rev-Button--warning'],\n  alert: ['rev-Button--alert'],\n  disabled: ['rev-Button--disabled'],\n\n  expanded: ['rev-Button--expanded'],\n\n  dropdown: ['rev-Button--dropdown'],\n}\nconst BOOL_PROPS = Object.keys(BOOL_PROPS_TO_CLASS_NAMES)\n\nexport default class Button extends Component {\n  render() {\n    // Extract props that will not pass through.\n    const {className, children, tag, icon, ...props} = this.props\n\n    // Start building the className\n    const boolClassNames = []\n    BOOL_PROPS.forEach((name) => {\n      if(props[name]) {\n        boolClassNames.push(BOOL_PROPS_TO_CLASS_NAMES[name] )\n      }\n      delete props[name]\n    })\n\n    // Of the props that WILL pass through, we need to use these.\n    const {disabled, href} = props\n\n    // Finish building the classNAme\n    const buttonClassName = classNames(className, 'rev-Button', boolClassNames, {\n      disabled,\n    })\n\n    // Modify underlying tag to suit props.\n    const component = tag || (href ? 'a' : 'button')\n\n    // Prepend icon if available\n    let newChildren = children\n    if(icon) {\n      newChildren = [\n        <Icon className=\"rev-Button-icon\" key=\"icon\" i={icon} />,\n        ' ',\n        ...Children.toArray(children),\n      ]\n    }\n\n    // Finish\n    return createElement(\n      component,\n      {...props, className: buttonClassName},\n      newChildren,\n    )\n  }\n}\n"]}