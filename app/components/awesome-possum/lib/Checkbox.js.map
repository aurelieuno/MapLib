{"version":3,"sources":["../src/Checkbox.js"],"names":["BOOL_PROPS_TO_CLASS_NAMES","stacked","stackedForSmall","stackedForMedium","BOOL_PROPS","Object","keys","Checkbox","props","error","className","label","children","boolClassNames","forEach","name","push","labelClassName","inputClassName","CheckboxFieldset","options","value","defaultValue","help","onChange","readOnly","rest","isControlled","hasDefault","valueArray","defaultValueArray","valueLookup","defaultValueLookup","val","checkboxes","map","option","key","disabled","checked","defaultChecked","fieldsetClassName","Fieldset"],"mappings":"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","file":"Checkbox.js","sourcesContent":["import React, {Component} from 'react'\nimport classNames from 'classnames'\nimport InputLabel from './InputLabel'\nimport InputHelpText from './InputHelpText'\nimport InputErrors from './InputErrors'\nimport CheckableFieldset from './CheckableFieldset'\n\nconst BOOL_PROPS_TO_CLASS_NAMES = {\n  stacked: ['rev-Checkbox--stacked'],\n  stackedForSmall: ['rev-Checkbox--stackedForSmall'],\n  stackedForMedium: ['rev-Checkbox--stackedForMedium']\n}\nconst BOOL_PROPS = Object.keys(BOOL_PROPS_TO_CLASS_NAMES)\n\nexport default class Checkbox extends Component {\n  render() {\n    const {error, className, label, children, ...props} = this.props\n\n    // Start building the className\n    const boolClassNames = []\n    BOOL_PROPS.forEach((name) => {\n      if(props[name]) {\n        boolClassNames.push(BOOL_PROPS_TO_CLASS_NAMES[name] )\n      }\n      delete props[name]\n    })\n\n    const labelClassName = classNames(className, 'rev-Checkbox', boolClassNames, {\n      'is-invalid': !!error,\n    })\n\n    const inputClassName = classNames('rev-Checkbox-input', {\n      'is-invalid-input': !!error,\n      'is-invalid': !!error,\n    })\n\n    return (\n      <InputLabel className={labelClassName} error={error}>\n        <input {...props} className={inputClassName} type=\"checkbox\" />\n        <span className=\"rev-Checkbox-label\">{label}</span>\n      </InputLabel>\n    )\n  }\n}\n\nclass CheckboxFieldset extends Component {\n  render() {\n    const {\n      className,\n      options,\n      name,\n      value,\n      defaultValue,\n      label,\n      help,\n      error,\n      onChange,\n      readOnly,\n      ...rest,\n    } = this.props\n\n    const isControlled = value != null\n    const hasDefault = defaultValue != null\n\n    const valueArray = value || []\n    const defaultValueArray = defaultValue || []\n\n    const valueLookup = {}\n    const defaultValueLookup = {}\n\n    valueArray.forEach((val) => valueLookup[val] = true)\n    defaultValueArray.forEach((val) => defaultValueLookup[val] = true)\n\n    const checkboxes = options.map((option) => {\n      const props = {\n        name,\n        error,\n        onChange,\n        readOnly,\n        label: option.label,\n        key: option.key || option.value,\n        disabled: option.disabled,\n      }\n      if(isControlled) {\n        props.value = option.value\n        props.checked = !!valueLookup[option.value]\n      }\n      if(hasDefault) {\n        props.defaultValue = option.value\n        props.defaultChecked = !!defaultValueLookup[option.value]\n      }\n      return <Checkbox className=\"rev-CheckboxFieldset-checkbox\" {...props} />\n    })\n\n    const fieldsetClassName = classNames(className, 'rev-CheckboxFieldset')\n\n    return (\n      <CheckableFieldset\n        {...rest}\n        className={fieldsetClassName}\n        help={help}\n        error={error}\n        label={label}\n      >\n        {checkboxes}\n      </CheckableFieldset>\n    )\n  }\n}\n\nCheckbox.Fieldset = CheckboxFieldset\n"]}