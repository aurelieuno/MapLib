{"version":3,"sources":["../src/Icon.test.js"],"names":["describe","it","shallow","testClassName","childClassName","first","prop","expect","to","contain","mock","console","expects","atLeast","verify"],"mappings":";;AAAA;;;;AACA;;;;;;AAEAA,SAAS,MAAT,EAAiB,YAAM;AACrBC,KAAG,gCAAH,EAAqC,YAAM;AACzCC,YAAQ,yCAAR;AACD,GAFD;;AAIAD,KAAG,+BAAH,EAAoC,YAAM;AACxC,QAAME,gBAAgB,UAAtB;;AAEA,QAAMC,iBAAiBF,QAAQ,sCAAM,WAAWC,aAAjB,GAAR,EACpBE,KADoB,GAEpBC,IAFoB,CAEf,WAFe,CAAvB;;AAIAC,WAAOH,cAAP,EAAuBI,EAAvB,CAA0BC,OAA1B,CAAkCN,aAAlC;AACD,GARD;;AAUAF,KAAG,sCAAH,EAA2C,YAAM;AAC/C,QAAMS,OAAO,gBAAMA,IAAN,CAAWC,OAAX,EAAoBC,OAApB,CAA4B,MAA5B,EAAoCC,OAApC,CAA4C,CAA5C,CAAb;AACAX,YAAQ,sCAAM,MAAK,MAAX,GAAR;AACAQ,SAAKI,MAAL;AACD,GAJD;AAKD,CApBD","file":"Icon.test.js","sourcesContent":["import Icon from './Icon'\nimport sinon from 'sinon'\n\ndescribe('Icon', () => {\n  it('should render without throwing', () => {\n    shallow(<Icon />)\n  })\n\n  it('should add className to child', () => {\n    const testClassName = '__TEST__'\n\n    const childClassName = shallow(<Icon className={testClassName} />)\n      .first()\n      .prop('className')\n\n    expect(childClassName).to.contain(testClassName)\n  })\n\n  it('should warn if the icon prop is used', () => {\n    const mock = sinon.mock(console).expects('warn').atLeast(1)\n    shallow(<Icon icon=\"home\" />)\n    mock.verify()\n  })\n})\n"]}