{"version":3,"sources":["../src/Tabs.test.js"],"names":["describe","it","shallow","inherentClassName","testClassName","childClassName","first","prop","expect","to","contain","mount","spy","stateful","find","simulate","preventDefault","called","eq"],"mappings":";;AAAA;;;;AACA;;;;;;AAEAA,SAAS,MAAT,EAAiB,YAAM;AACrBC,KAAG,gCAAH,EAAqC,YAAM;AACzCC,YAAQ;AAAA;AAAA;AAAM,yCAAM,IAAN,IAAW,YAAY,CAAvB,EAA0B,OAAM,KAAhC;AAAN,KAAR;AACD,GAFD;;AAIAD,KAAG,+BAAH,EAAoC,YAAM;AACxC,QAAME,oBAAoB,UAA1B;AACA,QAAMC,gBAAgB,UAAtB;;AAEA,QAAMC,iBAAiBH,QACrB;AAAA;AAAA,QAAM,WAAWE,aAAjB;AACE,yCAAM,IAAN,IAAW,YAAY,CAAvB,EAA0B,OAAM,KAAhC;AADF,KADqB,EAIrBE,KAJqB,GAIbC,IAJa,CAIR,WAJQ,CAAvB;;AAMAC,WAAOH,cAAP,EAAuBI,EAAvB,CAA0BC,OAA1B,CAAkCP,iBAAlC;AACAK,WAAOH,cAAP,EAAuBI,EAAvB,CAA0BC,OAA1B,CAAkCN,aAAlC;AACD,GAZD;AAaD,CAlBD;;AAoBAJ,SAAS,cAAT,EAAyB,YAAM;AAC7BC,KAAG,sDAAH,EAA2D,YAAM;AAC/DU,UACE;AAAA,qBAAM,QAAN;AAAA,QAAe,eAAe,CAA9B;AACE,yCAAM,IAAN,IAAW,YAAY,CAAvB,EAA0B,OAAM,KAAhC,EAAsC,iBAAtC;AADF,KADF;AAKD,GAND;;AAQAV,KAAG,8DAAH,EAAmE,YAAM;AACvEU,UACE;AAAA,qBAAM,QAAN;AAAA;AACE,yCAAM,IAAN,IAAW,YAAY,CAAvB,EAA0B,OAAM,KAAhC,EAAsC,iBAAtC;AADF,KADF;AAKD,GAND;;AAQAV,KAAG,0CAAH,EAA+C,YAAM;AACnD,QAAMW,MAAM,gBAAMA,GAAN,EAAZ;AACA,QAAMC,WAAWX,QACf;AAAA,qBAAM,QAAN;AAAA,QAAe,eAAe,CAA9B;AACE,mCAAK,WAAU,oBAAf,EAAoC,SAASU,GAA7C;AADF,KADe,CAAjB;;AAMAC,aAASC,IAAT,CAAc,qBAAd,EAAqCC,QAArC,CAA8C,OAA9C,EAAuD,EAACC,gBAAgB,0BAAM,CAAE,CAAzB,EAAvD;;AAEAR,WAAOI,IAAIK,MAAX,EAAmBR,EAAnB,CAAsBS,EAAtB,CAAyB,IAAzB;AACD,GAXD;AAYD,CA7BD;;AA+BAlB,SAAS,WAAT,EAAsB,YAAM;AAC1BC,KAAG,uCAAH,EAA4C,YAAM;AAChDU,UAAM,mCAAM,IAAN,IAAW,YAAY,CAAvB,EAA0B,OAAM,KAAhC,EAAsC,iBAAtC,GAAN;AACD,GAFD;AAGD,CAJD;;AAMAX,SAAS,YAAT,EAAuB,YAAM;AAC3BC,KAAG,+CAAH,EAAoD,YAAM;AACxDU,UAAM,mCAAM,IAAN,IAAW,YAAY,CAAvB,EAA0B,OAAM,KAAhC,EAAsC,YAAtC,GAAN;AACD,GAFD;;AAIAV,KAAG,iDAAH,EAAsD,YAAM;AAC1DU,UAAM,mCAAM,IAAN,IAAW,YAAY,CAAvB,EAA0B,OAAM,KAAhC,GAAN;AACD,GAFD;AAGD,CARD","file":"Tabs.test.js","sourcesContent":["import Tabs from './Tabs'\nimport sinon from 'sinon'\n\ndescribe('Tabs', () => {\n  it('should render without throwing', () => {\n    shallow(<Tabs><Tabs.Item contentKey={1} title=\"One\" /></Tabs>)\n  })\n\n  it('should add className to child', () => {\n    const inherentClassName = 'rev-Tabs'\n    const testClassName = '__TEST__'\n\n    const childClassName = shallow(\n      <Tabs className={testClassName}>\n        <Tabs.Item contentKey={1} title=\"One\" />\n      </Tabs>\n    ).first().prop('className')\n\n    expect(childClassName).to.contain(inherentClassName)\n    expect(childClassName).to.contain(testClassName)\n  })\n})\n\ndescribe('StatefulTabs', () => {\n  it('should render without throwing (default active case)', () => {\n    mount(\n      <Tabs.Stateful defaultActive={1}>\n        <Tabs.Item contentKey={1} title=\"One\" renderTitle />\n      </Tabs.Stateful>\n    )\n  })\n\n  it('should render without throwing (wihtout default active case)', () => {\n    mount(\n      <Tabs.Stateful>\n        <Tabs.Item contentKey={1} title=\"One\" renderTitle />\n      </Tabs.Stateful>\n    )\n  })\n\n  it('should handle clicks on child components', () => {\n    const spy = sinon.spy()\n    const stateful = shallow(\n      <Tabs.Stateful defaultActive={1}>\n        <div className=\"StatefulTabExample\" onClick={spy} />\n      </Tabs.Stateful>\n    )\n\n    stateful.find('.StatefulTabExample').simulate('click', {preventDefault: () => {}})\n\n    expect(spy.called).to.eq(true)\n  })\n})\n\ndescribe('Tabs.Item', () => {\n  it('can render without error (title case)', () => {\n    mount(<Tabs.Item contentKey={1} title=\"One\" renderTitle />)\n  })\n})\n\ndescribe('Tabs.Panel', () => {\n  it('can render without error (panel case, active)', () => {\n    mount(<Tabs.Item contentKey={1} title=\"One\" active />)\n  })\n\n  it('can render without error (panel case, inactive)', () => {\n    mount(<Tabs.Item contentKey={1} title=\"One\" />)\n  })\n})\n"]}