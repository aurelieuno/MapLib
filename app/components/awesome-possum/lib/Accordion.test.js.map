{"version":3,"sources":["../src/Accordion.test.js"],"names":["describe","it","shallow","inherentClassName","testClassName","childClassName","first","prop","expect","to","contain","childProp","children","eq","forEach","item","component","mount","text","include","instance","toggleActiveStatus","setExclusivelyActive","spy","child","find","Item","fakeEvent","preventDefault","props","onClick","update","state","called"],"mappings":"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","file":"Accordion.test.js","sourcesContent":["import Accordion from './Accordion'\nimport sinon from 'sinon'\n\ndescribe('Accordion', () => {\n  it('should render without throwing', () => {\n    shallow(<Accordion><Accordion.Item contentKey={1} title=\"One\" /></Accordion>)\n  })\n\n  it('should add className to child', () => {\n    const inherentClassName = 'rev-Accordion'\n    const testClassName = '__TEST__'\n\n    const childClassName = shallow(\n      <Accordion className={testClassName}>\n        <Accordion.Item contentKey={1} title=\"One\" />\n      </Accordion>\n    ).first().prop('className')\n\n    expect(childClassName).to.contain(inherentClassName)\n    expect(childClassName).to.contain(testClassName)\n  })\n\n  it('should handle single active items', () => {\n    const childProp = shallow(\n      <Accordion active={1}>\n        <Accordion.Item contentKey={1} title=\"One\" />\n      </Accordion>\n    ).children().first().prop('active')\n\n    expect(childProp).to.eq(true)\n  })\n\n  it('should handle multiple active items (with array)', () => {\n    shallow(\n      <Accordion active={[1,2]}>\n        <Accordion.Item contentKey={1} title=\"One\" />\n        <Accordion.Item contentKey={2} title=\"Two\" />\n      </Accordion>\n    ).children().forEach((item) => {\n      const childProp = item.prop('active')\n\n      expect(childProp).to.eq(true)\n    })\n  })\n\n  it('should handle multiple active items (with an object)', () => {\n    const component = mount(\n      <Accordion active={{1: true, 2: true}}>\n        <Accordion.Item contentKey={1} title=\"One\">first</Accordion.Item>\n        <Accordion.Item contentKey={2} title=\"Two\">second</Accordion.Item>\n      </Accordion>\n    )\n\n    expect(component.text()).to.include('first')\n    expect(component.text()).to.include('second')\n  })\n})\n\ndescribe('Accordion.Stateful', () => {\n  it('should render without throwing', () => {\n    let component = mount(<Accordion.Stateful><Accordion.Item contentKey={1} title=\"One\" /></Accordion.Stateful>)\n    let instance = component.instance()\n    instance.toggleActiveStatus(1)\n    instance.setExclusivelyActive(1)\n    instance.toggleActiveStatus(1)\n    instance.toggleActiveStatus(1)\n    instance.toggleActiveStatus(1)\n    instance.setExclusivelyActive(1)\n    instance.setExclusivelyActive(1)\n  })\n\n  it('can handle clicks', () => {\n    let spy = sinon.spy()\n    let component = mount(<Accordion.Stateful><Accordion.Item contentKey={1} title=\"One\" onClick={spy} /></Accordion.Stateful>)\n    let child = component.find(Accordion.Item).instance()\n    let fakeEvent = {preventDefault: () => null }\n    child.props.onClick(fakeEvent)\n\n    expect(component.update().state('active')['1']).to.eq(true)\n    expect(spy.called).to.eq(true)\n  })\n})\n"]}