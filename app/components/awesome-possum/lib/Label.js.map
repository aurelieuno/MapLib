{"version":3,"sources":["../src/Label.js"],"names":["PROP_NAME_TO_CLASS_NAME","secondary","alert","warning","success","PROP_NAMES","Object","keys","PROP_TYPES","icon","string","forEach","key","bool","Label","props","className","children","propClassNames","name","push","newClassName","propTypes"],"mappings":";;;;;;;;;;AAAA;;;;AACA;;;;AACA;;;;AACA;;;;;;;;;;;;;;AAEA,IAAMA,0BAA0B;AAC9BC,aAAW,CAAC,WAAD,EAAc,sBAAd,CADmB;AAE9BC,SAAO,CAAC,OAAD,EAAU,kBAAV,CAFuB;AAG9BC,WAAS,CAAC,SAAD,EAAY,oBAAZ,CAHqB;AAI9BC,WAAS,CAAC,SAAD,EAAY,oBAAZ;AAJqB,CAAhC;AAMA,IAAMC,aAAaC,OAAOC,IAAP,CAAYP,uBAAZ,CAAnB;AACA,IAAMQ,aAAa;AACjBC,QAAM,oBAAUC;AADC,CAAnB;;AAIAL,WAAWM,OAAX,CAAmB,UAACC,GAAD;AAAA,SAASJ,WAAWI,GAAX,IAAkB,oBAAUC,IAArC;AAAA,CAAnB;;IAEqBC,K;;;;;;;;;;;6BAIV;AAAA,mBACuC,KAAKC,KAD5C;AAAA,UACAC,SADA,UACAA,SADA;AAAA,UACWC,QADX,UACWA,QADX;AAAA,UACqBR,IADrB,UACqBA,IADrB;AAAA,UAC8BM,KAD9B;;AAGP,UAAMG,iBAAiB,EAAvB;AACAb,iBAAWM,OAAX,CAAmB,UAACQ,IAAD,EAAU;AAC3B,YAAGJ,MAAMI,IAAN,CAAH,EAAgB;AACdD,yBAAeE,IAAf,CAAoBpB,wBAAwBmB,IAAxB,CAApB;AACA,iBAAOJ,MAAMI,IAAN,CAAP;AACD;AACF,OALD;;AAOA,UAAME,eAAe,0BAAWL,SAAX,EAAsB,OAAtB,EAA+B,WAA/B,EAA4CE,cAA5C,CAArB;;AAEA,aACE;AAAA;AAAA,qBAAUH,KAAV,IAAiB,WAAWM,YAA5B;AACGZ,eAAO,gDAAM,GAAGA,IAAT,EAAe,WAAU,gBAAzB,GAAP,GAAsD,IADzD;AAAA;AACgEQ;AADhE,OADF;AAKD;;;;;;AAtBkBH,K,CAEZQ,S,GAAYd,U;kBAFAM,K","file":"Label.js","sourcesContent":["import React, {Component} from 'react'\nimport PropTypes from 'prop-types'\nimport classNames from 'classnames'\nimport Icon from './Icon'\n\nconst PROP_NAME_TO_CLASS_NAME = {\n  secondary: ['secondary', 'rev-Label--secondary'],\n  alert: ['alert', 'rev-Label--alert'],\n  warning: ['warning', 'rev-Label--warning'],\n  success: ['success', 'rev-Label--success'],\n}\nconst PROP_NAMES = Object.keys(PROP_NAME_TO_CLASS_NAME)\nconst PROP_TYPES = {\n  icon: PropTypes.string,\n}\n\nPROP_NAMES.forEach((key) => PROP_TYPES[key] = PropTypes.bool)\n\nexport default class Label extends Component {\n\n  static propTypes = PROP_TYPES;\n\n  render() {\n    const {className, children, icon, ...props} = this.props\n\n    const propClassNames = []\n    PROP_NAMES.forEach((name) => {\n      if(props[name]) {\n        propClassNames.push(PROP_NAME_TO_CLASS_NAME[name])\n        delete props[name]\n      }\n    })\n\n    const newClassName = classNames(className, 'label', 'rev-Label', propClassNames)\n\n    return (\n      <span {...props} className={newClassName}>\n        {icon ? <Icon i={icon} className=\"rev-Label-icon\" /> : null} {children}\n      </span>\n    )\n  }\n}\n"]}