{"version":3,"sources":["../src/Select.test.js"],"names":["describe","it","shallow","testClassName","childClassName","first","prop","expect","to","contain","OPTIONS","label","value","select","children","have","length"],"mappings":";;AAAA;;;;;;AAEAA,SAAS,QAAT,EAAmB,YAAM;AACvBC,KAAG,gCAAH,EAAqC,YAAM;AACzCC,YAAQ,2CAAR;AACD,GAFD;;AAIAD,KAAG,+BAAH,EAAoC,YAAM;AACxC,QAAME,gBAAgB,UAAtB;;AAEA,QAAMC,iBAAiBF,QAAQ,wCAAQ,WAAWC,aAAnB,GAAR,EACpBE,KADoB,GAEpBC,IAFoB,CAEf,WAFe,CAAvB;;AAIAC,WAAOH,cAAP,EAAuBI,EAAvB,CAA0BC,OAA1B,CAAkCN,aAAlC;AACD,GARD;;AAUAF,KAAG,iBAAH,EAAsB,YAAM;AAC1B,QAAMS,UAAU,CACd,EAACC,OAAO,OAAR,EAAiBC,OAAO,GAAxB,EADc,EAEd,EAACD,OAAO,OAAR,EAAiBC,OAAO,GAAxB,EAFc,EAGd,EAACD,OAAO,MAAR,EAAgBC,OAAO,GAAvB,EAHc,EAId,EAACD,OAAO,MAAR,EAAgBC,OAAO,GAAvB,EAJc,CAAhB;;AAOA,QAAMC,SAASX,QAAQ,wCAAQ,SAASQ,OAAjB,GAAR,CAAf;;AAEAH,WAAOM,OAAOC,QAAP,EAAP,EAA0BN,EAA1B,CAA6BO,IAA7B,CAAkCC,MAAlC,CAAyCN,QAAQM,MAAjD;AACD,GAXD;AAYD,CA3BD;;AA6BAhB,SAAS,cAAT,EAAyB,YAAM;AAC7BC,KAAG,gCAAH,EAAqC,YAAM;AACzCC,YAAQ,qCAAQ,KAAR,OAAR;AACD,GAFD;;AAIAD,KAAG,+BAAH,EAAoC,YAAM;AACxC,QAAME,gBAAgB,UAAtB;;AAEA,QAAMC,iBAAiBF,QAAQ,qCAAQ,KAAR,IAAc,WAAWC,aAAzB,GAAR,EACpBE,KADoB,GAEpBC,IAFoB,CAEf,WAFe,CAAvB;;AAIAC,WAAOH,cAAP,EAAuBI,EAAvB,CAA0BC,OAA1B,CAAkCN,aAAlC;AACD,GARD;AASD,CAdD","file":"Select.test.js","sourcesContent":["import Select from './Select'\n\ndescribe('Select', () => {\n  it('should render without throwing', () => {\n    shallow(<Select />)\n  })\n\n  it('should add className to child', () => {\n    const testClassName = '__TEST__'\n\n    const childClassName = shallow(<Select className={testClassName} />)\n      .first()\n      .prop('className')\n\n    expect(childClassName).to.contain(testClassName)\n  })\n\n  it('handles options', () => {\n    const OPTIONS = [\n      {label: 'North', value: 'N'},\n      {label: 'South', value: 'S'},\n      {label: 'East', value: 'E'},\n      {label: 'West', value: 'W'},\n    ]\n\n    const select = shallow(<Select options={OPTIONS} />)\n\n    expect(select.children()).to.have.length(OPTIONS.length)\n  })\n})\n\ndescribe('Select.Stack', () => {\n  it('should render without throwing', () => {\n    shallow(<Select.Stack />)\n  })\n\n  it('should add className to child', () => {\n    const testClassName = '__TEST__'\n\n    const childClassName = shallow(<Select.Stack className={testClassName} />)\n      .first()\n      .prop('className')\n\n    expect(childClassName).to.contain(testClassName)\n  })\n})\n"]}