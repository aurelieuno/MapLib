{"version":3,"sources":["../src/ExpandingCol.js"],"names":["ExpandingColStateContainer","props","expandPane","setState","open","closePane","state","children","closer","expander","remainingProps","onClick","Component","propTypes","node","className","string","element","defaultProps","ExpandingCol","openClass","bool","Stateful","exports"],"mappings":";;;;;;;;;;;AAAA;;;;AACA;;;;AACA;;AACA;;;;;;;;;;;;;;AAEA;AACA;AACA;AACA;IACaA,0B,WAAAA,0B;;;AAgBX,sCAAYC,KAAZ,EAAmB;AAAA;;AAAA,wJACXA,KADW;;AAAA,UAOnBC,UAPmB,GAON,YAAM;AACjB,YAAKC,QAAL,CAAc,EAACC,MAAM,IAAP,EAAd;AACD,KATkB;;AAAA,UAWnBC,SAXmB,GAWP,YAAM;AAChB,YAAKF,QAAL,CAAc,EAACC,MAAM,KAAP,EAAd;AACD,KAbkB;;AAEjB,UAAKE,KAAL,GAAa;AACXF,YAAM;AADK,KAAb;AAFiB;AAKlB;;;;;;AAUD;AACA;AACA;6BACS;AAAA,mBAC+C,KAAKH,KADpD;AAAA,UACFM,QADE,UACFA,QADE;AAAA,UACQC,MADR,UACQA,MADR;AAAA,UACgBC,QADhB,UACgBA,QADhB;AAAA,UAC6BC,cAD7B;;AAEP,aAAO;AAAC,oBAAD;AAAA;AACH,gBAAM,KAAKJ,KAAL,CAAWF,IADd;AAEH,kBAAQ,yBAAaI,MAAb,EAAqB,EAACG,SAAS,KAAKN,SAAf,EAArB,CAFL;AAGH,oBAAU,yBAAaI,QAAb,EAAuB,EAACE,SAAS,KAAKT,UAAf,EAAvB;AAHP,WAICQ,cAJD;AAMFH;AANE,OAAP;AAQD;;;;EA5C6C,gBAAMK,S;;AAAzCZ,0B,CACJa,S,GAAY;AACjBN,YAAU,oBAAUO,IADH;AAEjBC,aAAW,oBAAUC,MAFJ;AAGjBR,UAAQ,oBAAUS,OAHD;AAIjBR,YAAU,oBAAUQ;AAJH,C;AADRjB,0B,CAQJkB,Y,GAAe;AACpB;AACA;AACAH,aAAW,EAHS;AAIpBP,UAAQ;AAAA;AAAA,MAAQ,WAAU,4EAAlB;AAAA;AAAA,GAJY;AAKpBC,YAAU;AAAA;AAAA,MAAQ,WAAU,8EAAlB;AAAA;AAAA;AALU,C;;IAuCHU,Y;;;;;;;;;;;6BAYV;AAAA,oBACgE,KAAKlB,KADrE;AAAA,UACFM,QADE,WACFA,QADE;AAAA,UACQC,MADR,WACQA,MADR;AAAA,UACgBC,QADhB,WACgBA,QADhB;AAAA,UAC0BL,IAD1B,WAC0BA,IAD1B;AAAA,UACgCW,SADhC,WACgCA,SADhC;AAAA,UAC8CL,cAD9C;;AAEP,UAAIU,YAAYhB,OAAO,SAAP,GAAmB,WAAnC;;AAEA,aACE;AAAA;AAAA,qBACMM,cADN;AAEE,gDAAoCK,SAApC,SAAiDK;AAFnD;AAIGhB,eAAOI,MAAP,GAAgBC,QAJnB;AAKE;AAAA;AAAA,YAAK,WAAU,+BAAf;AACGF;AADH;AALF,OADF;AAWD;;;;EA3BuC,gBAAMK,S;;AAA3BO,Y,CACZD,Y,GAAe;AACpBH,aAAW;AADS,C;AADHI,Y,CAKZN,S,GAAY;AACjBN,YAAU,oBAAUO,IADH;AAEjBC,aAAW,oBAAUC,MAFJ;AAGjBR,UAAQ,oBAAUM,IAHD;AAIjBV,QAAM,oBAAUiB;AAJC,C;kBALAF,Y;;;AA8BrBA,aAAaA,YAAb,GAA4BA,YAA5B;AACAA,aAAaG,QAAb,GAAwBtB,0BAAxB;AACAmB,aAAanB,0BAAb,GAA0CA,0BAA1C;AACAuB,QAAQJ,YAAR,GAAuBA,YAAvB;AACAI,QAAQD,QAAR,GAAmBtB,0BAAnB;AACAuB,QAAQvB,0BAAR,GAAqCA,0BAArC","file":"ExpandingCol.js","sourcesContent":["import React, {cloneElement} from 'react'\nimport PropTypes from 'prop-types'\nimport {Row, Col} from './grid'\nimport Button from './Button'\n\n// An expanding column that manages its own state. This is to be used in\n// non-Redux applications where the state is not managed by another component\n// If you are using Redux, or if a different component controls whether the\n// column is open or not, use an ExpandingCol instead\nexport class ExpandingColStateContainer extends React.Component {\n  static propTypes = {\n    children: PropTypes.node,\n    className: PropTypes.string,\n    closer: PropTypes.element,\n    expander: PropTypes.element,\n  }\n\n  static defaultProps = {\n    // intentionally blank to override the 'expanderless' class of the stateless\n    // version of the component\n    className: '',\n    closer: <Button className=\"rev-ExpandingCol-closer rev-Button rev-Button--small rev-Button--secondary\">-</Button>,\n    expander: <Button className=\"rev-ExpandingCol-expander rev-Button rev-Button--small rev-Button--secondary\">+</Button>,\n  }\n\n  constructor(props) {\n    super(props)\n    this.state = {\n      open: false,\n    }\n  }\n\n  expandPane = () => {\n    this.setState({open: true})\n  }\n\n  closePane = () => {\n    this.setState({open: false})\n  }\n\n  // Feeds open state, closer and opener down to an ExpandingCol. Note that\n  // we clone the closer and expander so that we can accept them as props\n  // from up the tree but still inject our onClick handlers for open/close\n  render() {\n    let {children, closer, expander, ...remainingProps} = this.props\n    return <ExpandingCol\n        open={this.state.open}\n        closer={cloneElement(closer, {onClick: this.closePane})}\n        expander={cloneElement(expander, {onClick: this.expandPane})}\n        {...remainingProps}\n      >\n        {children}\n      </ExpandingCol>\n  }\n}\n\nexport default class ExpandingCol extends React.Component {\n  static defaultProps = {\n    className: 'rev-ExpandingCol--expanderless',\n  }\n\n  static propTypes = {\n    children: PropTypes.node,\n    className: PropTypes.string,\n    closer: PropTypes.node,\n    open: PropTypes.bool,\n  }\n\n  render() {\n    let {children, closer, expander, open, className, ...remainingProps} = this.props\n    let openClass = open ? 'is-open' : 'is-closed'\n\n    return (\n      <Col\n        {...remainingProps}\n        className={`rev-ExpandingCol-pane ${className} ${openClass}`}\n      >\n        {open ? closer : expander}\n        <div className=\"rev-ExpandingCol-pane-content\">\n          {children}\n        </div>\n      </Col>\n    )\n  }\n}\n\nExpandingCol.ExpandingCol = ExpandingCol\nExpandingCol.Stateful = ExpandingColStateContainer\nExpandingCol.ExpandingColStateContainer = ExpandingColStateContainer\nexports.ExpandingCol = ExpandingCol\nexports.Stateful = ExpandingColStateContainer\nexports.ExpandingColStateContainer = ExpandingColStateContainer\n"]}