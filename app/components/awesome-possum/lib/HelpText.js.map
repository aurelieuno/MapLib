{"version":3,"sources":["../src/HelpText.js"],"names":["HelpText","props","className","children","newClassName","propTypes","oneOfType","string","node","isRequired"],"mappings":";;;;;;;;;;AAAA;;;;AACA;;;;AACA;;;;;;;;;;;;;;IAEqBA,Q;;;;;;;;;;;6BAOV;AAAA,mBACiC,KAAKC,KADtC;AAAA,UACAC,SADA,UACAA,SADA;AAAA,UACWC,QADX,UACWA,QADX;AAAA,UACwBF,KADxB;;AAGP,UAAMG,eAAe,0BAAWF,SAAX,EAAsB,cAAtB,CAArB;;AAEA,aACE;AAAA;AAAA,mBAAO,WAAWE,YAAlB,IAAoCH,KAApC;AACGE;AADH,OADF;AAKD;;;;;;AAjBkBH,Q,CAEZK,S,GAAY;AACjBF,YAAU,oBAAUG,SAAV,CAAoB,CAAC,oBAAUC,MAAX,EAAmB,oBAAUC,IAA7B,CAApB,EAAwDC,UADjD;AAEjBP,aAAW,oBAAUK;AAFJ,C;kBAFAP,Q","file":"HelpText.js","sourcesContent":["import React, {Component} from 'react'\nimport PropTypes from 'prop-types'\nimport classNames from 'classnames'\n\nexport default class HelpText extends Component {\n\n  static propTypes = {\n    children: PropTypes.oneOfType([PropTypes.string, PropTypes.node]).isRequired,\n    className: PropTypes.string,\n  }\n\n  render() {\n    const {className, children, ...props} = this.props\n\n    const newClassName = classNames(className, 'rev-HelpText')\n\n    return (\n      <small className={newClassName} {...props}>\n        {children}\n      </small>\n    )\n  }\n}\n"]}