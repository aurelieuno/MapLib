{"version":3,"sources":["../src/Accordion.js"],"names":["activeToObject","active","obj","Array","forEach","name","AccordionItem","props","children","className","onClick","href","title","renderHiddenPanes","contentKey","liClassName","aClassName","divClassName","div","Accordion","activeMap","rewriteChild","child","ulClassName","map","defaultProps","Item","StatefulAccordion","setExclusivelyActive","state","setState","toggleActiveStatus","currentStatus","multi","newOnClick","e","args","preventDefault","defaultActive","Stateful"],"mappings":"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","file":"Accordion.js","sourcesContent":["import React, {Children, cloneElement, Component} from 'react'\nimport classNames from 'classnames'\n\n// Converts string or array of strings to string-to-bool object mapping\n// \"one\" -> {one: true}\n// [\"one\", \"two\"] -> {one: true, two: true}\nfunction activeToObject(active) {\n  let obj = {}\n  if(active == null) {\n    return obj\n  }\n  if(active instanceof Array) {\n    active.forEach((name) => obj[name] = true)\n  } else if (typeof(active) === 'object') {\n    obj = active\n  } else {\n    obj[active] = true\n  }\n  return obj\n}\n\nclass AccordionItem extends Component {\n  render() {\n    const {children, className, onClick, href, title, active, renderHiddenPanes, contentKey, ...props} = this.props\n\n    const liClassName = classNames(className, 'rev-AccordionItem', {\n      'rev-AccordionItem--selected': active,\n    })\n\n    const aClassName = classNames('rev-AccordionItem-title', {\n      'rev-AccordionItem-title--selected': active,\n    })\n\n    const divClassName = classNames('rev-AccordionItem-content', {\n      'rev-AccordionItem-content--selected': active,\n    })\n\n    if (!active && !renderHiddenPanes)\n      return <li {...props} className={liClassName}>\n        <a className={aClassName} href={href || '#'} onClick={onClick}>{title}</a>\n      </li>\n\n\n    const div = (\n      <div\n        className={divClassName}\n      >\n        {children}\n      </div>\n    )\n\n    return (\n      <li {...props} className={liClassName}>\n        <a className={aClassName} href={href || '#'} onClick={onClick}>{title}</a>\n        {div}\n      </li>\n    )\n  }\n}\n\nexport default class Accordion extends Component {\n\n  static defaultProps = {\n    active: null,\n  };\n\n  render() {\n    const {children, className, active, renderHiddenPanes, ...props} = this.props\n\n    const activeMap = activeToObject(active)\n\n    const rewriteChild = (child) => {\n      const active = activeMap[child.props.contentKey] || false\n      return cloneElement(child, {active, renderHiddenPanes})\n    }\n\n    const ulClassName = classNames(className, 'rev-Accordion')\n\n    return (\n      <ul {...props} className={ulClassName}>\n        {Children.map(children, rewriteChild)}\n      </ul>\n    )\n  }\n}\n\nAccordion.Item = AccordionItem\n\nclass StatefulAccordion extends Component {\n\n  constructor(props) {\n    super(props)\n    this.state = {\n      active: activeToObject(props.defaultActive)\n    }\n  }\n\n  setExclusivelyActive = (contentKey) => {\n    if(this.state.active[contentKey]) {\n      return\n    }\n    const active = {}\n    active[contentKey] = true\n    this.setState({active})\n  };\n\n  toggleActiveStatus = (contentKey) => {\n    const currentStatus = this.state.active[contentKey]\n    const active = {...this.state.active}\n    active[contentKey] = !this.state.active[contentKey]\n    this.setState({active})\n  };\n\n  rewriteChild = (child) => {\n    const {multi} = this.props\n    const {contentKey, onClick} = child.props\n    const newOnClick = (e, ...args) => {\n      e.preventDefault()\n      this[multi ? 'toggleActiveStatus' : 'setExclusivelyActive'](contentKey)\n      if(onClick) {\n        return onClick(e, ...args)\n      }\n    }\n    return cloneElement(child, {onClick: newOnClick})\n  };\n\n  render() {\n    const {children, defaultActive, multi, ...props} = this.props\n    return (\n      <Accordion {...props} active={this.state.active}>\n        {Children.map(children, this.rewriteChild)}\n      </Accordion>\n    )\n  }\n}\n\nAccordion.Stateful = StatefulAccordion\n"]}