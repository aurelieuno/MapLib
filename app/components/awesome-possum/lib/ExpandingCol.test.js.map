{"version":3,"sources":["../src/ExpandingCol.test.js"],"names":["describe","it","classes","shallow","first","prop","expect","to","contain","container","mount","expander","find","simulate","state","eq"],"mappings":";;AAAA;;AACA;;AAEAA,SAAS,cAAT,EAAyB,YAAM;AAC7BC,KAAG,qCAAH,EAA0C,YAAM;AAC9C,QAAIC,UAAUC,QACZ;AAAA;AAAA;AAAA;AAAA,KADY,EAEZC,KAFY,GAEJC,IAFI,CAEC,WAFD,CAAd;;AAIAC,WAAOJ,OAAP,EAAgBK,EAAhB,CAAmBC,OAAnB,CAA2B,WAA3B;AACD,GAND;;AAQAP,KAAG,iCAAH,EAAsC,YAAM;AAC1C,QAAIC,UAAUC,QACZ;AAAA;AAAA,QAAc,UAAd;AAAA;AAAA,KADY,EAEZC,KAFY,GAEJC,IAFI,CAEC,WAFD,CAAd;;AAIAC,WAAOJ,OAAP,EAAgBK,EAAhB,CAAmBC,OAAnB,CAA2B,SAA3B;AACD,GAND;AAOD,CAhBD;;AAkBAR,SAAS,4BAAT,EAAuC,YAAM;AAC3CC,KAAG,gCAAH,EAAqC,YAAM;AACzCE,YAAQ;AAAA;AAAA;AAAA;AAAA,KAAR;AACD,GAFD;;AAIAF,KAAG,kCAAH,EAAuC,YAAM;AAC3C,QAAIQ,YAAYC,MACd;AAAA;AAAA;AAAA;AAAA,KADc,CAAhB;AAGA,QAAIC,WAAWF,UAAUG,IAAV,CAAe,4BAAf,EAA6CR,KAA7C,EAAf;;AAEAO,aAASE,QAAT,CAAkB,OAAlB;;AAEAP,WAAOG,UAAUK,KAAV,CAAgB,MAAhB,CAAP,EAAgCP,EAAhC,CAAmCQ,EAAnC,CAAsC,IAAtC;;AAEAJ,aAASE,QAAT,CAAkB,OAAlB;;AAEAP,WAAOG,UAAUK,KAAV,CAAgB,MAAhB,CAAP,EAAgCP,EAAhC,CAAmCQ,EAAnC,CAAsC,KAAtC;AACD,GAbD;AAcD,CAnBD","file":"ExpandingCol.test.js","sourcesContent":["import 'jsdom-global/register'\nimport {ExpandingCol, ExpandingColStateContainer} from './ExpandingCol'\n\ndescribe('ExpandingCol', () => {\n  it('should render closed with is-closed', () => {\n    let classes = shallow(\n      <ExpandingCol>Test</ExpandingCol>\n    ).first().prop('className')\n\n    expect(classes).to.contain('is-closed')\n  })\n\n  it('should render open with is-open', () => {\n    let classes = shallow(\n      <ExpandingCol open>Test</ExpandingCol>\n    ).first().prop('className')\n\n    expect(classes).to.contain('is-open')\n  })\n})\n\ndescribe('ExpandingColStateContainer', () => {\n  it('should render without throwing', () => {\n    shallow(<ExpandingColStateContainer>Test</ExpandingColStateContainer>)\n  })\n\n  it('should be openable and closeable', () => {\n    let container = mount(\n      <ExpandingColStateContainer>Test</ExpandingColStateContainer>\n    )\n    let expander = container.find('.rev-ExpandingCol-expander').first()\n\n    expander.simulate('click')\n\n    expect(container.state('open')).to.eq(true)\n\n    expander.simulate('click')\n\n    expect(container.state('open')).to.eq(false)\n  })\n})\n"]}