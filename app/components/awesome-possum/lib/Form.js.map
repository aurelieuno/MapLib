{"version":3,"sources":["../src/Form.js"],"names":["Form","props","className","children","enableMethodOverride","methodOverrideInputName","method","formClassName","overrideMethod","includes","toLowerCase","actualMethod","propTypes","string","node","bool","defaultProps"],"mappings":";;;;;;;;;;AAAA;;;;AAEA;;;;AACA;;;;AACA;;;;;;;;;;;;;;IAEqBA,I;;;;;;;;;;;6BAgBV;AAAA,mBAQH,KAAKC,KARF;AAAA,UAELC,SAFK,UAELA,SAFK;AAAA,UAGLC,QAHK,UAGLA,QAHK;AAAA,UAILC,oBAJK,UAILA,oBAJK;AAAA,UAKLC,uBALK,UAKLA,uBALK;AAAA,UAMLC,MANK,UAMLA,MANK;AAAA,UAOFL,KAPE;;AAUP,UAAMM,gBAAgB,0BAAWL,SAAX,EAAsB,UAAtB,CAAtB;;AAEA,UAAMM,iBAAmB;AACvBJ,8BACA,CAAC,CAAC,KAAD,EAAO,MAAP,EAAeK,QAAf,CAAwBH,OAAOI,WAAP,EAAxB,CAFH;;AAKA,UAAMC,eAAeH,iBAAgB,MAAhB,GAAuBF,MAA5C;;AAEA,aACE;AAAA;AAAA,qBAAUL,KAAV,IAAiB,WAAWM,aAA5B,EAA2C,QAAQI,YAAnD;AACE,wEADF;AAEGH,0BAAmB,yCAAO,MAAK,QAAZ,EAAqB,MAAMH,uBAA3B,EAAoD,OAAOC,MAA3D,GAFtB;AAGGH;AAHH,OADF;AAOD;;;;;;AA1CkBH,I,CACZY,S,GAAY;AACjBV,aAAW,oBAAUW,MADJ;AAEjBV,YAAU,oBAAUW,IAFH;AAGjBV,wBAAsB,oBAAUW,IAHf;AAIjBV,2BAAyB,oBAAUQ,MAJlB;AAKjBP,UAAQ,oBAAUO;AALD,C;AADAb,I,CASZgB,Y,GAAe;AACpBd,aAAU,EADU;AAEpBE,wBAAsB,IAFF;AAGpBC,2BAAyB,SAHL;AAIpBC,UAAQ;AAJY,C;kBATHN,I","file":"Form.js","sourcesContent":["import React, {Component} from 'react'\n\nimport PropTypes from 'prop-types'\nimport AuthenticityToken from './AuthenticityToken'\nimport classNames from 'classnames'\n\nexport default class Form extends Component {\n  static propTypes = {\n    className: PropTypes.string,\n    children: PropTypes.node,\n    enableMethodOverride: PropTypes.bool,\n    methodOverrideInputName: PropTypes.string,\n    method: PropTypes.string,\n  };\n\n  static defaultProps = {\n    className:'',\n    enableMethodOverride: true,\n    methodOverrideInputName: '_method',\n    method: 'post',\n  };\n\n  render() {\n    const {\n      className,\n      children,\n      enableMethodOverride,\n      methodOverrideInputName,\n      method,\n      ...props\n    } = this.props\n\n    const formClassName = classNames(className, 'rev-Form')\n\n    const overrideMethod = ( //only override the method name if its enabled and the method is not post or get.\n      enableMethodOverride &&\n      !['get','post'].includes(method.toLowerCase())\n    )\n\n    const actualMethod = overrideMethod? \"post\":method\n\n    return (\n      <form {...props} className={formClassName} method={actualMethod}>\n        <AuthenticityToken />\n        {overrideMethod && (<input type=\"hidden\" name={methodOverrideInputName} value={method} />)}\n        {children}\n      </form>\n    )\n  }\n}\n"]}